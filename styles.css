img {
    width: 100%;
  }

h1, h2, h3, p {
    font-family: sans-serif;
    color: white;
    padding: 15px;
    }
    

.hero
{
    width: 100%;
    min-height: 300px; 
    background-image: url("Oven1600w.jpg");
    background-repeat: no-repeat;
    background-size: cover;
    background-color: red;
    float: left;
    clear: both;
}


/* The following is the navbar section.*/


.navbar
{
    width: 90%;
    height: 20px; 
    margin: auto;
    margin-top: 25px;
    position: relative;
}

.navlogo
{
    float: left;
    margin-top: 25px;
    height: 20px;
    width: 20%;
    background-color: violet;
}

.navbarright
{
    float: right;
}

.navbar ul
{
    list-style-type: none;
}

.navbar li
{
    height: 20px;
    display:inline;
    float: right;
}

.hover {
    width: 90px;
    max-height: 10px;
    position: relative;
    margin-left: 15px;
}

.hover .img-link {
    position: absolute;
}

.hover:hover .img-link {
    display: none;
}

.hover .img-hover {
    position: absolute;
    display: none;
}

.hover:hover .img-hover {
    display: inline;
}


/* The following was the code I had for the basket in the desktop version, but it seems more trouble that it's worth! If I use this code, then the basket seems to go outside of the navbar, to the right. 

.basket {
    background-color: green;
    max-height: 10px;
    float: right;
    width: 30%;
    }
...*/


/* The following is to make the desktop-orientated navbar section disappear when you zoom.*/


@media only screen and (max-width: 600px) {
    .navbar { 
      display: none;
    }
  }

/*  That worked fine.*/

/*  The following CSS is for the logo and hamburger icon when on a mobile device.*/

.mobilenav
{
    padding-top: 50px;
    position: relative;
    margin: auto;
    width: 80%;
    min-height: 100px;
}


.hamburgericon
{
    position: absolute;
    float: left;
    width: 5%;
    min-height: 20px;
}

.mobilelogo
{
    position: relative;
    margin: auto;
    width: 60%;
    min-height: 100px;
    background-color: blue;
}

.mobilebasket
{
    position: absolute;
    float: right;
    width: 5%;
    min-height: 20px;
    background-color: green;
}

@media only screen and (max-width: 600px) {
    .mobilenav { 
      display: block;
    }
  }

  @media only screen and (min-width: 600px) {
    .mobilenav { 
      display: none;
    }
  }

/*  And here I plan to use the same CSS to make the hamburger and menu icons change. The thing is that I need to give them a class of div - not "hover" as above, but something else.*/

.hovermobile .img-link {
    position: absolute;
}

.hovermobile:hover .img-link {
    display: none;
}

.hovermobile .img-hover {
    position: absolute;
    display: none;
}

.hovermobile:hover .img-hover {
    display: inline;
}





/*  And that completes the CSS for the navbar on mobile devices.*/

.calltoaction
{
    clear: both;
    width: 80%;
    min-height: 100px; 
    background-color: green;
    margin: auto;
    margin-top: 100px;
    margin-bottom: 25px;
}  

.calltoaction h1{
    font-family: sans-serif;
    color: white;
    text-align: center;
    padding-top: 10px;
    padding-bottom: 10px;
    }

.order{
    background-color: cyan;
    margin: auto;
    width: 40%;
}

.order h2{
    color: white;
    text-align: center;
    padding-top: 5px;
    padding-bottom: 5px;
}



/*  CSS for the Menu section starts here.*/

.menu
{
    width: 100%;
    min-height: 300px;  
    background-color: orange;
    float: left;
    clear: both;
}

.menucontainer
{
    width: 80%;
    min-height: 200px; 
    background-color: green;
    margin: auto;
    margin-top: 25px;
    margin-bottom: 25px;
    display: table;
}  

.menucolumn
{
width: 33.33%;
min-height: 100px; 
background-color: cyan;
float: left;
display: table-cell;
}

@media only screen and (max-width: 600px) {
    .menucolumn { 
      display: block;
      width: 100%;
    }
  }

.menucolumn h2, h1, p 
{
font-family: sans-serif;
color: white;
padding: 10px;
}

.menuheading
{
/*  The plan here is a conditional scenario so that the flowlines for the next section all jump down at the same point, regardless of how long or short the line of h2 is. Something like: decide, based on the point where one of them jumps down, a height that triggers all divs in the menuheading class to become bigger. Without upsetting the other conditional stuff for the mobile.*/
}



.menuparagraph
{

}



/*  CSS for the Reviews section starts here.*/

.reviews
{
    width: 100%;
    min-height: 300px; 
    background-color: black;
    float: left;
}



/*  CSS for the About Us section starts here.*/


.aboutus
{
    width: 100%;
    min-height: 300px; 
    background-color: green;
    float: left;
}

.staffcontainer
{
    width: 80%;
    min-height: 200px; 
    background-color: blue;
    margin: auto;
    margin-top: 25px;
    margin-bottom: 25px;
    display: table;
}  

.staffcolumnimage
{
width: 33.33%;
background-color: red;
float: left;
display: table-cell;
margin-bottom: 30px;
clear: both;
}

@media only screen and (max-width: 600px) {
    .staffcolumnimage { 
      display: block;
      width: 100%;
    }
  }



.staffcolumntext
{
width: 64.66%;
min-height: 100px; 
background-color: orange;
float: left;
display: table-cell;
padding-left: 2%;
}

@media only screen and (max-width: 600px) {
    .staffcolumntext { 
      display: block;
      width: 100%;
    }
  }



.staffcolumntext h2, h1, p {
font-family: sans-serif;
color: white;
padding: 10px;
}







/*  CSS for the Ingredients section starts here - I'm thinking of dropping this section*/

.ingredients
{
    width: 100%;
    min-height: 300px; 
    background-color: cyan;
    float: left;
}


/*  CSS for the FAQ section starts here.*/

.faq
{
    width: 100%;
    min-height: 300px; 
    background-color: blue;
    float: left;
}

.faqcontainer
{
    width: 80%;
    min-height: 200px; 
    background-color: violet;
    margin: auto;
    margin-top: 25px;
    margin-bottom: 25px;
}  

/*  

.faqcontainer h2, h1, p {
    font-family: sans-serif;
    color: white;
    padding: 10px;
    }

.faqcontainer p {
    font-family: sans-serif;
    color: white;
    padding-left: 10px;
    padding-right: 10px;
    padding-bottom: 10px;
    padding-top: 0px;
    }
*/

/*  The following is old code from the basic accordion - it doesn't apply to anything anymore as the divs have been renamed.*/

/*  

.answer {
    display: none;
    }
      
.question:hover + .answer {
    display: block;
    background-color: red;
    }

.question:hover h2{
    padding-left: 10px;
    padding-right: 10px;
    padding-top: 10px;
    padding-bottom: 0px;
    margin-bottom: 0px;
    }
    
*/ 

/*  The following is new code from w3schools.*/

.accordion 
    {
    background-color: #eee;
    color: #444;
    cursor: pointer;
    padding: 18px;
    width: 100%;
    text-align: left;
    border: none;
    outline: none;
    transition: 0.4s;
    }

.active, .accordion:hover {
    background-color: #ccc;
    }
      
/* Style the accordion panel. Note: hidden by default */
.panel 
    {
    padding: 0 18px;
    background-color: white;
    display: none;
    overflow: hidden;
    }

for (i = 0; i < acc.length; i++) {
    acc[i].addEventListener("click", function() {
    /* Toggle between adding and removing the "active" class,
    to highlight the button that controls the panel */
    this.classList.toggle("active");
      
    /* Toggle between hiding and showing the active panel */
    var panel = this.nextElementSibling;
    if (panel.style.display === "block") {
        panel.style.display = "none";
    } else {
    panel.style.display = "block";
        }
    });
    } 

/*  CSS for the Work With Us section starts here.*/

.workwithus
{
    width: 100%;
    min-height: 300px; 
    background-color: violet;
    float: left;
}

.workwithuscontainer
{
    width: 80%;
    min-height: 200px; 
    background-color: green;
    margin: auto;
    margin-top: 25px;
    margin-bottom: 25px;
}  


/*  CSS for the Work With Us section starts here.*/

.footer
{
    width: 100%;
    min-height: 100px; 
    background-color: grey;
    float: left;
}

